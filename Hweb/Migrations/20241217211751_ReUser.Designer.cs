// <auto-generated />
using System;
using Hweb.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hweb.Migrations
{
    [DbContext(typeof(hwebDBcontext))]
    [Migration("20241217211751_ReUser")]
    partial class ReUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hweb.completed_request_log", b =>
                {
                    b.Property<int>("updateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("updateID"), 1L, 1);

                    b.Property<int>("requestID")
                        .HasColumnType("int");

                    b.Property<string>("request_update_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time_completed")
                        .HasColumnType("datetime2");

                    b.HasKey("updateID");

                    b.ToTable("completed_request_log");
                });

            modelBuilder.Entity("Hweb.Login_Credentials", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("user_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("Login_Credentials");
                });

            modelBuilder.Entity("Hweb.Requests", b =>
                {
                    b.Property<int>("requestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("requestID"), 1L, 1);

                    b.Property<string>("request_department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("request_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("request_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("request_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("time_completed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("time_submitted")
                        .HasColumnType("datetime2");

                    b.HasKey("requestID");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Hweb.userRequests", b =>
                {
                    b.Property<int>("requestID")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("requestID", "username");

                    b.ToTable("userRequests");
                });

            modelBuilder.Entity("Hweb.userRequests", b =>
                {
                    b.HasOne("Hweb.Requests", "Requests")
                        .WithMany()
                        .HasForeignKey("requestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
